# This workflow automatically creates monthly releases
# It locks dependencies, updates the version to the current date,
# and publishes to PyPI with calendar versioning (YYYY.MM)
#
# Copyright (c) 2025 MeteoSwiss, created by Hugues de Laroussilhe; hugues.delaroussilhe@meteoswiss.ch

name: CI_publish

on:
  schedule:
    # At 03:00 on day-of-month 1.
    - cron: '0 3 1 * *'
  workflow_dispatch:  # Allow manual triggering

jobs:

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout current repository
      uses: actions/checkout@v4
      with:
        ssh-key: ${{ secrets.DEPLOY_KEY }}

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install poetry and python package
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry

    - name: Generate lock file
      run: |
        # Update only Anemoi packages and their dependencies
        poetry update anemoi-datasets anemoi-graphs anemoi-inference anemoi-models anemoi-registry anemoi-training anemoi-utils
        git add poetry.lock

    - name: Check for dependency changes
      id: check_changes
      run: |
        # Check if poetry.lock has any changes
        if git diff --cached --quiet poetry.lock; then
          echo "No dependency changes detected"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Dependency changes detected"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Update version to current date
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        VERSION=$(date -u +%Y.%-m)
        echo "New version: $VERSION"
        sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml
        echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

    - name: Update changelog with package versions
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        python scripts/update_changelog.py
        git add CHANGELOG.rst

    - name: Commit changes
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        git add pyproject.toml poetry.lock CHANGELOG.rst
        git commit -m "monthly release ${{ env.RELEASE_VERSION }}" || echo "No changes to commit"

    - name: Create and push tag
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        git tag "${{ env.RELEASE_VERSION }}"
        git push origin main --follow-tags

    - name: Publish to TestPyPi
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry config pypi-token.testpypi ${{ secrets.TESTPYPI_API_TOKEN }}
        poetry publish --build -r testpypi
        rm -rf dist/

    - name: Publish to PyPi
      if: steps.check_changes.outputs.has_changes == 'true'
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
        poetry publish --build

    - name: Build documentation
      if: steps.check_changes.outputs.has_changes == 'true'
      run: poetry run sphinx-build doc doc/_build

    # - name: Publish documentation
    #   if: steps.check_changes.outputs.has_changes == 'true'
    #   uses: peaceiris/actions-gh-pages@v3

    #   with:
    #     publish_branch: gh-pages
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: doc/_build/
    #     force_orphan: true

    - name: No changes detected
      if: steps.check_changes.outputs.has_changes == 'false'
      run: |
        echo "No dependency changes detected. Skipping release."
        echo "All Anemoi packages are already at their latest versions."
